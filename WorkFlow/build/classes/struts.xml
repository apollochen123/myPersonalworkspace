<?xml version="1.0" encoding="GBK"?>
<!-- 指定Struts2配置文件的DTD信息 -->
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<!-- Struts2配置文件的根元素 -->
<struts>
	<!-- 配置了系列常量 -->
	<constant name="struts.custom.i18n.resources" value="resource"/>
	<constant name="struts.i18n.encoding" value="UTF-8"/>
	<constant name="struts.devMode" value="true"/>
	<package name="default" extends="struts-default">
       <interceptors>
			<!-- 配置普通员工角色的权限检查拦截器 -->
			<interceptor name="empAuth"	class=
			"action.authority.EmpAuthorityInterceptor"/>

			<!-- 配置普通员工的默认的拦截器栈 -->
			<interceptor-stack name="empStack">
				<interceptor-ref name="defaultStack"/>
				<interceptor-ref name="empAuth"/>
			</interceptor-stack>
		</interceptors>


		<!-- 定义全局Result映射 -->
		<global-results>
			<!-- 定义sql、root两个异常对应的视图页 -->
			<result name="business">/WEB-INF/content/error.jsp</result>
			<result name="root">/WEB-INF/content/error.jsp</result>
			<!-- 定义login逻辑视图对应的视图资源 -->
			<result name="login">/WEB-INF/content/login.jsp</result>
		</global-results>

		<!-- 定义全局异常映射 -->
		<global-exception-mappings>
			<!-- 当Action中遇到HrException异常时，
				系统将转入name为business的结果中 -->
			<exception-mapping 
				exception="exception.HrException"
				result="business"/>
			<!-- 当Action中遇到Exception异常时，
				系统将转入name为root的结果中 -->
			<exception-mapping exception="java.lang.Exception" 
				result="root"/>
		</global-exception-mappings>


<!-- ========================员工的Action=============================== -->
		<!-- 定义处理登录系统的的Action -->
		<action name="processLogin"
			class="action.LoginAction">
			<result name="input">/WEB-INF/content/login.jsp</result>
			<result name="mgr">/WEB-INF/content/manager/index.jsp</result>
			<result name="emp">/WEB-INF/content/employee/index.jsp</result>
			<result name="error">/WEB-INF/content/login.jsp</result>
		</action>
		<!-- 进入打卡 -->
		<action name="*Punch" class="action.PunchAction">
			<interceptor-ref name="empStack"/>
		    <result>/WEB-INF/content/{1}/punch.jsp</result>
		</action>
		<!-- 处理上班打卡 -->
		<action name="*Come" method="come" 
		        class="action.ProcessPunchAction">
		        <interceptor-ref name="empStack"/>
		        <result>/WEB-INF/content/{1}/index.jsp</result>
	    </action>
	    <!-- 处理下班打卡 -->      
	    <action name="*Leave" method="leave" 
	            class="action.ProcessPunchAction">
	            <interceptor-ref name="empStack"></interceptor-ref>
	            <result>/WEB-INF/content/{1}/index.jsp</result>         
	    </action>
	    <!-- 查看自己的非正常出勤 -->	
		<action name="viewUnPunch" 
			class="action.ViewUnAttendAction">
			<interceptor-ref name="basicStack"/>
			<interceptor-ref name="empAuth"/>
			<result>/WEB-INF/content/employee/viewUnAttend.jsp</result>
		</action>
	    <!-- 进入异动申请 -->
		<action name="appChange" 
			class="action.AppChangeAction">
			<interceptor-ref name="store">
			   <!-- 我该action指定拦截器的参数，覆盖name属性 -->
				<param name="operationMode">RETRIEVE</param>
			</interceptor-ref>
			<interceptor-ref name="basicStack"/>
			<interceptor-ref name="empAuth"/>
			<result>/WEB-INF/content/employee/appChange.jsp</result>
		</action>
		<!-- 提交异动申请 -->
		<action name="processApp"
			class="action.ProcessAppAction">
			<interceptor-ref name="store">
				<param name="operationMode">STORE</param>
			</interceptor-ref>
			<interceptor-ref name="empStack"/>
			<result name="input" type="redirect"><!-- 重定向到申请id的地方 -->
				/appChange.action?attid=${attId}</result>
			<result>/WEB-INF/content/employee/index.jsp</result>
		</action>
		<!-- 查看本人工资的Action -->
		<action name="view*Salary"
			class="action.ViewSalaryAction">
			<interceptor-ref name="basicStack"/>
			<interceptor-ref name="empAuth"/>
			<result>/WEB-INF/content/{1}/ViewSalary.jsp</result>
		 </action>

		
		<action name="*">
			<result>/WEB-INF/content/{1}.jsp</result>
		</action>
	</package>
</struts>